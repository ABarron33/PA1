
// main.cpp
#include <iostream>
#include <stdexcept>
#include "My_vec.h"

int main() {

try{
    // define an object v of My_vec type
	
	My_vec v;
	
	
    // insert 'B' at the rank 0 into the vector v
	
	v.insert_at_rank(0, 'B');
	
	
	// use the overloaded operator << to display vector elements
	
    cout << "The Elements within v: " << v << endl;
	
	
	// display the vector size of v
	
	cout << "size of v: " << v.get_size() << endl;
	
	
	// insert 'A' at the rank 0 into the vector v
	
	v.insert_at_rank(0, 'A');
	v.insert_at_rank(1, 'q');
	v.insert_at_rank(2, 'H');
	v.insert_at_rank(3, '9');
	v.insert_at_rank(4, 'p');
	
	
	// use the overloaded operator << to display vector elements
	
	cout << "The Elements within v: " << v << endl;
	
	
	// display the vector size of v
	
	cout << "size of v: " << v.get_size() << endl;
	
	
	// insert 'D' at the rank 10 into the vector v
	
	try{
		v.insert_at_rank(10, 'D');
	}catch(exception &error){
		cerr << "Error: " << error.what() << endl;
	}
	
	
	// use the overloaded operator << to display vector elements
	
	cout << "The Elements within v: " << v << endl;
	
	
	// display the vector size of v
	
	cout << "size of v: " << v.get_size() << endl;
	
	
	// remove a character at the rank 2 from the vector v
	
	try{
		v.remove_at_rank(2);
	}catch(exception &error){
		cerr << "Error: " << error.what() << endl;
	}
	
	
	// use the overloaded operator << to display vector elements
	
	cout << "The Elements within v: " << v << endl;
	
	
	// display the vector size of v
	
	cout << "size of v: " << v.get_size() << endl;
	
	
	// replace a character at the rank 2 by the character 'E'
	
	try{
		v.replace_at_rank(2, 'E');
	}catch(exception& error){
		cerr << "Error: " << error.what() << endl;
	}
	
	
	// use the overloaded operator << to display vector elements
	
	cout << "The Elements within v: " << v << endl;

	// display the vector size of v
	
	cout << "size of v: " << v.get_size() << endl;
	
	
	// create a copy v1 of the vector v using a copy constructor
	
	My_vec v1 = v;
	
	
	// use the overloaded operator << to display the vector v1
	
	cout << "\nv1 elements: " << v1 << endl;
	
	
    // replace a character at the rank 2 of the vector v1 with the character 'Y'
	
	
	try{
		v1.replace_at_rank(2, 'Y');
	}catch(exception &error){
		cerr << "Error: " << error.what() << endl;
	}
	// use the overloaded operator << to display vector v1 elements
	cout << "v1 elements: " << v1 << endl;
	// define an object v2 of My_vec type
	My_vec v2;
	// insert 'K' at the rank 0 into the vector v2
	v2.insert_at_rank(0, 'K');
	// use the overloaded operator << to display vector elements
	cout << "\nv2 elements: " << v2 << endl;
    // display the vector v2 size
	cout << "v2 size: " << v2.get_size() << endl;
    // test the assignment operator and copy the vector v1 to v2 
	v2 = v1;
    // use the overloaded operator << to display vector v2
	cout << "v2 elements: " << v2 << endl;
    // display the vector v2 size
	cout << "v2 size: " << v2.get_size() << endl;
    // test the function find_max_index using v2
	cout << "v2 max index: " << find_max_index(v2,v2.get_size()) << endl;
	// test the function sort_max using v2
	sort_max(v2);
	cout << "v2 elements sorted: " << v2 << endl;
	// replace in the vector v2 a character at the rank 14 with 'S'
	try{
		v2.replace_at_rank(14, 'S');
	}catch(exception &error){
		cerr << "Error: " << error.what() << endl;
	}
}

catch(exception &error){
	cerr << "Error: " << error.what() << endl;
}
}
